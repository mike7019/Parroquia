-- Database generated with pgModeler (PostgreSQL Database Modeler).
-- pgModeler version: 1.0.0-beta1
-- PostgreSQL version: 15.0
-- Project Site: pgmodeler.io
-- Model Author: ---

-- Database creation must be performed outside a multi lined SQL file. 
-- These commands were put in this file only as a convenience.
-- 
-- object: caracterizacion | type: DATABASE --
-- DROP DATABASE IF EXISTS caracterizacion;
CREATE DATABASE caracterizacion
	ENCODING = 'UTF8'
	LC_COLLATE = 'es_CO'
	LC_CTYPE = 'es_CO'
	TABLESPACE = pg_default
	OWNER = postgres;
-- ddl-end --


-- object: test | type: SCHEMA --
-- DROP SCHEMA IF EXISTS test CASCADE;
CREATE SCHEMA test;
-- ddl-end --
ALTER SCHEMA test OWNER TO postgres;
-- ddl-end --

SET search_path TO pg_catalog,public,test;
-- ddl-end --

-- object: public.tipo_identificacion | type: TABLE --
-- DROP TABLE IF EXISTS public.tipo_identificacion CASCADE;
CREATE TABLE public.tipo_identificacion (
	id_tipo_identificacion bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	descripcion character varying(255) NOT NULL,
	CONSTRAINT tipo_identificacion_pk PRIMARY KEY (id_tipo_identificacion)
);
-- ddl-end --
ALTER TABLE public.tipo_identificacion OWNER TO postgres;
-- ddl-end --

INSERT INTO public.tipo_identificacion (id_tipo_identificacion, descripcion) VALUES (E'1', E'Registro civil');
-- ddl-end --
INSERT INTO public.tipo_identificacion (id_tipo_identificacion, descripcion) VALUES (E'2', E'Tarjeta de identidad');
-- ddl-end --
INSERT INTO public.tipo_identificacion (id_tipo_identificacion, descripcion) VALUES (E'3', E'Contrase√±a');
-- ddl-end --
INSERT INTO public.tipo_identificacion (id_tipo_identificacion, descripcion) VALUES (E'4', E'Cedula');
-- ddl-end --
INSERT INTO public.tipo_identificacion (id_tipo_identificacion, descripcion) VALUES (E'5', E'Pasaporte');
-- ddl-end --
INSERT INTO public.tipo_identificacion (id_tipo_identificacion, descripcion) VALUES (E'6', E'NIT');
-- ddl-end --

-- object: public.estado_civil | type: TABLE --
-- DROP TABLE IF EXISTS public.estado_civil CASCADE;
CREATE TABLE public.estado_civil (
	id_estado_civil bigint NOT NULL,
	descripcion character varying(255) NOT NULL,
	CONSTRAINT estado_civil_pk PRIMARY KEY (id_estado_civil)
);
-- ddl-end --
ALTER TABLE public.estado_civil OWNER TO postgres;
-- ddl-end --

INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'1', E'Soltero');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'2', E'Soltera');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'3', E'Casado');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'4', E'Casada');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'5', E'Viudo');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'6', E'Viuda');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'7', E'Union libre');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'8', E'Divorciado');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'9', E'Divorciada');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'10', E'Padre cabeza de hogar');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'11', E'Madre cabeza de hogar');
-- ddl-end --
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES (E'12', E'Matrimonio religioso');
-- ddl-end --

-- object: public.parroquia | type: TABLE --
-- DROP TABLE IF EXISTS public.parroquia CASCADE;
CREATE TABLE public.parroquia (
	id_parroquia bigint NOT NULL,
	nombre character varying(255) NOT NULL,
	CONSTRAINT parroquia_pk PRIMARY KEY (id_parroquia)
);
-- ddl-end --
ALTER TABLE public.parroquia OWNER TO postgres;
-- ddl-end --

-- object: public.parentesco | type: TABLE --
-- DROP TABLE IF EXISTS public.parentesco CASCADE;
CREATE TABLE public.parentesco (
	id_parentesco bigint NOT NULL,
	nombre character varying(255) NOT NULL,
	id_personas_personas bigint,
	CONSTRAINT parentesco_pk PRIMARY KEY (id_parentesco)
);
-- ddl-end --
ALTER TABLE public.parentesco OWNER TO postgres;
-- ddl-end --

INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'1', E'Abuelo');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'2', E'Abuela');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'3', E'Tio');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'4', E'Tia');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'5', E'Primo');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'6', E'Prima');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'7', E'Hermano');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'8', E'Hermana');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'9', E'Padre');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'10', E'Madre');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'11', E'Sobrino');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'12', E'Sobrina');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'13', E'Nieto');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'14', E'Nieta');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'15', E'Adoptado');
-- ddl-end --
INSERT INTO public.parentesco (id_parentesco, nombre) VALUES (E'16', E'Adoptada');
-- ddl-end --

-- object: public.tipo_viviendas | type: TABLE --
-- DROP TABLE IF EXISTS public.tipo_viviendas CASCADE;
CREATE TABLE public.tipo_viviendas (
	id_tipo_vivienda bigint NOT NULL,
	descripcion character varying(255),
	id_familia_familias bigint,
	CONSTRAINT tipo_vivienda_pk PRIMARY KEY (id_tipo_vivienda)
);
-- ddl-end --
ALTER TABLE public.tipo_viviendas OWNER TO postgres;
-- ddl-end --

INSERT INTO public.tipo_viviendas (id_tipo_vivienda, descripcion) VALUES (E'1', E'Propia');
-- ddl-end --
INSERT INTO public.tipo_viviendas (id_tipo_vivienda, descripcion) VALUES (E'2', E'Arrendada');
-- ddl-end --
INSERT INTO public.tipo_viviendas (id_tipo_vivienda, descripcion) VALUES (E'3', E'Familiar');
-- ddl-end --
INSERT INTO public.tipo_viviendas (id_tipo_vivienda, descripcion) VALUES (E'4', E'Invasion');
-- ddl-end --

-- object: public.tipos_disposicion_basura | type: TABLE --
-- DROP TABLE IF EXISTS public.tipos_disposicion_basura CASCADE;
CREATE TABLE public.tipos_disposicion_basura (
	id_tipos_disposicion_basura bigint NOT NULL,
	metodo character varying(255) NOT NULL,
	id_familia_familias bigint,
	CONSTRAINT tipos_disposicion_basura_pk PRIMARY KEY (id_tipos_disposicion_basura)
);
-- ddl-end --
ALTER TABLE public.tipos_disposicion_basura OWNER TO postgres;
-- ddl-end --

INSERT INTO public.tipos_disposicion_basura (id_tipos_disposicion_basura, metodo) VALUES (E'1', E'Al aire libre');
-- ddl-end --
INSERT INTO public.tipos_disposicion_basura (id_tipos_disposicion_basura, metodo) VALUES (E'2', E'Carro recolector');
-- ddl-end --
INSERT INTO public.tipos_disposicion_basura (id_tipos_disposicion_basura, metodo) VALUES (E'3', E'Compostaje');
-- ddl-end --
INSERT INTO public.tipos_disposicion_basura (id_tipos_disposicion_basura, metodo) VALUES (E'4', E'En tierra');
-- ddl-end --
INSERT INTO public.tipos_disposicion_basura (id_tipos_disposicion_basura, metodo) VALUES (E'5', E'Reciclaje');
-- ddl-end --

-- object: public.sistemas_acueducto | type: TABLE --
-- DROP TABLE IF EXISTS public.sistemas_acueducto CASCADE;
CREATE TABLE public.sistemas_acueducto (
	id_sistemas_acueducto bigint NOT NULL,
	proveedor character varying(255) NOT NULL,
	metodo_abastecimiento character varying(255) NOT NULL,
	descripcion character varying(255) NOT NULL,
	id_familia_familias bigint,
	CONSTRAINT sistemas_acueducto_pk PRIMARY KEY (id_sistemas_acueducto)
);
-- ddl-end --
ALTER TABLE public.sistemas_acueducto OWNER TO postgres;
-- ddl-end --

-- object: public.tipos_aguas_residuales | type: TABLE --
-- DROP TABLE IF EXISTS public.tipos_aguas_residuales CASCADE;
CREATE TABLE public.tipos_aguas_residuales (
	id_tipos_aguas_residuales bigint NOT NULL,
	metodo character varying(255) NOT NULL,
	id_familia_familias bigint,
	CONSTRAINT tipos_aguas_residuales_pk PRIMARY KEY (id_tipos_aguas_residuales)
);
-- ddl-end --
ALTER TABLE public.tipos_aguas_residuales OWNER TO postgres;
-- ddl-end --

INSERT INTO public.tipos_aguas_residuales (id_tipos_aguas_residuales, metodo) VALUES (E'1', E'Alcantarillado');
-- ddl-end --
INSERT INTO public.tipos_aguas_residuales (id_tipos_aguas_residuales, metodo) VALUES (E'2', E'Al aire libre');
-- ddl-end --
INSERT INTO public.tipos_aguas_residuales (id_tipos_aguas_residuales, metodo) VALUES (E'3', E'Pozo septico');
-- ddl-end --
INSERT INTO public.tipos_aguas_residuales (id_tipos_aguas_residuales, metodo) VALUES (E'4', E'Quebradas');
-- ddl-end --

-- object: public.niveles_educativos | type: TABLE --
-- DROP TABLE IF EXISTS public.niveles_educativos CASCADE;
CREATE TABLE public.niveles_educativos (
	id_niveles_educativos bigint NOT NULL,
	nivel character varying(255) NOT NULL,
	id_personas_personas bigint,
	CONSTRAINT niveles_educativos_pk PRIMARY KEY (id_niveles_educativos)
);
-- ddl-end --
ALTER TABLE public.niveles_educativos OWNER TO postgres;
-- ddl-end --

INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'1', E'Primaria');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'2', E'Bachillerato');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'3', E'Pregrado');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'4', E'Posgrado');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'5', E'Maestria');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'6', E'Doctorado');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'7', E'Tecnico');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'8', E'Tecnologo');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'9', E'Sin estudios');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'10', E'Cursos');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'12', E'Diplomado');
-- ddl-end --
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES (E'13', E'Seminario');
-- ddl-end --

-- object: public.sexo | type: TABLE --
-- DROP TABLE IF EXISTS public.sexo CASCADE;
CREATE TABLE public.sexo (
	id_sexo bigint NOT NULL,
	descripcion character varying(255) NOT NULL,
	CONSTRAINT sexo_pk PRIMARY KEY (id_sexo)
);
-- ddl-end --
ALTER TABLE public.sexo OWNER TO postgres;
-- ddl-end --

INSERT INTO public.sexo (id_sexo, descripcion) VALUES (E'1', E'Masculino');
-- ddl-end --
INSERT INTO public.sexo (id_sexo, descripcion) VALUES (E'2', E'Femenino');
-- ddl-end --

-- object: public.talla_vestimenta | type: TABLE --
-- DROP TABLE IF EXISTS public.talla_vestimenta CASCADE;
CREATE TABLE public.talla_vestimenta (
	id_talla_vestimenta bigint NOT NULL,
	descripcion character varying(255) NOT NULL,
	id_personas_personas bigint,
	CONSTRAINT talla_vestimenta_pk PRIMARY KEY (id_talla_vestimenta)
);
-- ddl-end --
ALTER TABLE public.talla_vestimenta OWNER TO postgres;
-- ddl-end --

INSERT INTO public.talla_vestimenta (id_talla_vestimenta, descripcion) VALUES (E'1', E'L');
-- ddl-end --
INSERT INTO public.talla_vestimenta (id_talla_vestimenta, descripcion) VALUES (E'2', E'M');
-- ddl-end --
INSERT INTO public.talla_vestimenta (id_talla_vestimenta, descripcion) VALUES (E'3', E'S');
-- ddl-end --
INSERT INTO public.talla_vestimenta (id_talla_vestimenta, descripcion) VALUES (E'4', E'XL');
-- ddl-end --
INSERT INTO public.talla_vestimenta (id_talla_vestimenta, descripcion) VALUES (E'5', E'XS');
-- ddl-end --
INSERT INTO public.talla_vestimenta (id_talla_vestimenta, descripcion) VALUES (E'6', E'XXL');
-- ddl-end --

-- object: public.comunidades_culturales | type: TABLE --
-- DROP TABLE IF EXISTS public.comunidades_culturales CASCADE;
CREATE TABLE public.comunidades_culturales (
	id_comunidades_culturales bigint NOT NULL,
	descripcion character varying(255) NOT NULL,
	CONSTRAINT comunidades_culturales_pk PRIMARY KEY (id_comunidades_culturales)
);
-- ddl-end --
ALTER TABLE public.comunidades_culturales OWNER TO postgres;
-- ddl-end --

-- object: public.personas | type: TABLE --
-- DROP TABLE IF EXISTS public.personas CASCADE;
CREATE TABLE public.personas (
	id_personas bigserial NOT NULL,
	primer_nombre character varying(255) NOT NULL,
	segundo_nombre character varying(255),
	primer_apellido character varying(255) NOT NULL,
	segundo_apellido character varying(255),
	id_tipo_identificacion_tipo_identificacion bigint,
	identificacion character varying(255) NOT NULL,
	telefono character varying(255) NOT NULL,
	correo_electronico character varying(255) NOT NULL,
	fecha_nacimiento date NOT NULL,
	sexo character varying(255) NOT NULL,
	direccion character varying(255) NOT NULL,
	id_familia_familias bigint,
	id_estado_civil_estado_civil bigint,
	id_parroquia_parroquia bigint,
	id_sexo_sexo bigint,
	id_comunidades_culturales_comunidades_culturales bigint,
	CONSTRAINT personas_pk PRIMARY KEY (id_personas),
	CONSTRAINT personas_identificacion_unique UNIQUE (identificacion),
	CONSTRAINT personas_correo_electronico_unique UNIQUE (correo_electronico)
);
-- ddl-end --
ALTER TABLE public.personas OWNER TO postgres;
-- ddl-end --

-- object: public.parroquias | type: TABLE --
-- DROP TABLE IF EXISTS public.parroquias CASCADE;
CREATE TABLE public.parroquias (
	id_parroquia bigint NOT NULL,
	nombre character varying(255) NOT NULL,
	id_familia_familias bigint,
	CONSTRAINT parroquias_pk PRIMARY KEY (id_parroquia)
);
-- ddl-end --
ALTER TABLE public.parroquias OWNER TO postgres;
-- ddl-end --

-- object: public.areas_liderazgo | type: TABLE --
-- DROP TABLE IF EXISTS public.areas_liderazgo CASCADE;
CREATE TABLE public.areas_liderazgo (
	id_areas_liderazgo bigint NOT NULL,
	nombre character varying(255) NOT NULL,
	descripcion character varying(255) NOT NULL,
	CONSTRAINT areas_liderazgo_pk PRIMARY KEY (id_areas_liderazgo)
);
-- ddl-end --
ALTER TABLE public.areas_liderazgo OWNER TO postgres;
-- ddl-end --

-- object: public.liderazgos | type: TABLE --
-- DROP TABLE IF EXISTS public.liderazgos CASCADE;
CREATE TABLE public.liderazgos (
	id_liderazgos bigint NOT NULL,
	fecha_inicio date NOT NULL,
	fecha_fin date,
	activo boolean DEFAULT TRUE,
	id_personas_personas bigint,
	id_areas_liderazgo_areas_liderazgo bigint,
	CONSTRAINT liderazgos_pk PRIMARY KEY (id_liderazgos)
);
-- ddl-end --
ALTER TABLE public.liderazgos OWNER TO postgres;
-- ddl-end --

-- object: public.destrezas | type: TABLE --
-- DROP TABLE IF EXISTS public.destrezas CASCADE;
CREATE TABLE public.destrezas (
	id_destrezas bigint NOT NULL,
	nombre character varying(255) NOT NULL,
	CONSTRAINT destrezas_pk PRIMARY KEY (id_destrezas)
);
-- ddl-end --
ALTER TABLE public.destrezas OWNER TO postgres;
-- ddl-end --

-- object: public.enfermedades | type: TABLE --
-- DROP TABLE IF EXISTS public.enfermedades CASCADE;
CREATE TABLE public.enfermedades (
	id_enfermedades smallint NOT NULL,
	nombre character varying(255) NOT NULL,
	CONSTRAINT enfermedades_pk PRIMARY KEY (id_enfermedades)
);
-- ddl-end --
ALTER TABLE public.enfermedades OWNER TO postgres;
-- ddl-end --

-- object: public.enfermedades_persona | type: TABLE --
-- DROP TABLE IF EXISTS public.enfermedades_persona CASCADE;
CREATE TABLE public.enfermedades_persona (
	id_enfermedades_persona bigint NOT NULL,
	id_personas_personas bigint,
	id_enfermedades_enfermedades smallint,
	CONSTRAINT enfermedades_persona_pk PRIMARY KEY (id_enfermedades_persona)
);
-- ddl-end --
ALTER TABLE public.enfermedades_persona OWNER TO postgres;
-- ddl-end --

-- object: public.municipios | type: TABLE --
-- DROP TABLE IF EXISTS public.municipios CASCADE;
CREATE TABLE public.municipios (
	id_municipio bigint NOT NULL,
	nombre_municipio character varying(255) NOT NULL,
	CONSTRAINT municipios_pk PRIMARY KEY (id_municipio)
);
-- ddl-end --
ALTER TABLE public.municipios OWNER TO postgres;
-- ddl-end --

-- object: public.veredas | type: TABLE --
-- DROP TABLE IF EXISTS public.veredas CASCADE;
CREATE TABLE public.veredas (
	id_vereda bigint NOT NULL,
	nombre character varying(255) NOT NULL,
	id_municipio_municipios bigint,
	id_sector_sector bigint,
	CONSTRAINT veredas_pk PRIMARY KEY (id_vereda)
);
-- ddl-end --
ALTER TABLE public.veredas OWNER TO postgres;
-- ddl-end --

-- object: public.sector | type: TABLE --
-- DROP TABLE IF EXISTS public.sector CASCADE;
CREATE TABLE public.sector (
	id_sector bigint NOT NULL,
	nombre character varying(255) NOT NULL,
	CONSTRAINT sector_pk PRIMARY KEY (id_sector)
);
-- ddl-end --
ALTER TABLE public.sector OWNER TO postgres;
-- ddl-end --

-- object: public.usuarios | type: TABLE --
-- DROP TABLE IF EXISTS public.usuarios CASCADE;
CREATE TABLE public.usuarios (
	id uuid NOT NULL DEFAULT gen_random_uuid(),
	primer_nombre character varying(255) NOT NULL,
	segundo_nombre character varying(255),
	primer_apellido character varying(255) NOT NULL,
	segundo_apellido character varying(255),
	correo_electronico character varying(255) NOT NULL,
	contrasena character varying(255) NOT NULL,
	activo boolean DEFAULT TRUE,
	CONSTRAINT usuarios_pk PRIMARY KEY (id),
	CONSTRAINT usuarios_correo_electronico_unique UNIQUE (correo_electronico)
);
-- ddl-end --
ALTER TABLE public.usuarios OWNER TO postgres;
-- ddl-end --

-- object: public.roles | type: TABLE --
-- DROP TABLE IF EXISTS public.roles CASCADE;
CREATE TABLE public.roles (
	id uuid NOT NULL DEFAULT gen_random_uuid(),
	nombre character varying(255) NOT NULL,
	CONSTRAINT roles_pk PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE public.roles OWNER TO postgres;
-- ddl-end --

-- object: public.difuntos_familia | type: TABLE --
-- DROP TABLE IF EXISTS public.difuntos_familia CASCADE;
CREATE TABLE public.difuntos_familia (
	id_difunto bigint NOT NULL,
	nombre_completo character varying(255) NOT NULL,
	fecha_fallecimiento date NOT NULL,
	observaciones text,
	id_familia_familias bigint,
	CONSTRAINT difuntos_familia_pk PRIMARY KEY (id_difunto)
);
-- ddl-end --
ALTER TABLE public.difuntos_familia OWNER TO postgres;
-- ddl-end --

-- object: public.celebraciones_personales | type: TABLE --
-- DROP TABLE IF EXISTS public.celebraciones_personales CASCADE;
CREATE TABLE public.celebraciones_personales (
	id_celebracion bigint NOT NULL,
	profesion character varying(255) NOT NULL,
	motivo character varying(255) NOT NULL,
	fecha date NOT NULL,
	id_personas_personas bigint,
	CONSTRAINT celebraciones_personales_pk PRIMARY KEY (id_celebracion)
);
-- ddl-end --
ALTER TABLE public.celebraciones_personales OWNER TO postgres;
-- ddl-end --

-- object: public.celebraciones_familia | type: TABLE --
-- DROP TABLE IF EXISTS public.celebraciones_familia CASCADE;
CREATE TABLE public.celebraciones_familia (
	id_celebracion bigint NOT NULL,
	motivo character varying(255) NOT NULL,
	fecha date NOT NULL,
	id_familia_familias bigint,
	CONSTRAINT celebraciones_familia_pk PRIMARY KEY (id_celebracion)
);
-- ddl-end --
ALTER TABLE public.celebraciones_familia OWNER TO postgres;
-- ddl-end --

-- object: public.celebraciones_padre_madre | type: TABLE --
-- DROP TABLE IF EXISTS public.celebraciones_padre_madre CASCADE;
CREATE TABLE public.celebraciones_padre_madre (
	id_celebracion bigint NOT NULL,
	rol varchar(10) NOT NULL,
	fecha_celebracion date NOT NULL,
	es_difunto boolean NOT NULL,
	observaciones text,
	id_parentesco_parentesco bigint,
	CONSTRAINT celebraciones_padre_madre_pk PRIMARY KEY (id_celebracion)
);
-- ddl-end --
ALTER TABLE public.celebraciones_padre_madre OWNER TO postgres;
-- ddl-end --

-- object: public.necesidades_enfermo | type: TABLE --
-- DROP TABLE IF EXISTS public.necesidades_enfermo CASCADE;
CREATE TABLE public.necesidades_enfermo (
	id_necesidad bigint NOT NULL,
	solicita_comunion boolean NOT NULL DEFAULT FALSE,
	otras_necesidades text NOT NULL,
	fecha_registro timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	id_personas_personas bigint,
	CONSTRAINT necesidades_enfermo_pk PRIMARY KEY (id_necesidad)
);
-- ddl-end --
ALTER TABLE public.necesidades_enfermo OWNER TO postgres;
-- ddl-end --

-- object: public.familias | type: TABLE --
-- DROP TABLE IF EXISTS public.familias CASCADE;
CREATE TABLE public.familias (
	id_familia bigint NOT NULL,
	uuid_familia char(36) NOT NULL,
	nombre_familia character varying(255) NOT NULL,
	direccion_familia character varying(255) NOT NULL,
	numero_contrato_epm character varying(255) NOT NULL,
	tratamiento_datos boolean DEFAULT FALSE,
	observaciones character varying(255),
	id_vereda_veredas bigint,
	CONSTRAINT familias_pk PRIMARY KEY (id_familia)
);
-- ddl-end --
ALTER TABLE public.familias OWNER TO postgres;
-- ddl-end --

-- object: personas_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.personas DROP CONSTRAINT IF EXISTS personas_pk1 CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT personas_pk1 FOREIGN KEY (id_familia_familias)
REFERENCES public.familias (id_familia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: personas_pk2 | type: CONSTRAINT --
-- ALTER TABLE public.personas DROP CONSTRAINT IF EXISTS personas_pk2 CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT personas_pk2 FOREIGN KEY (id_tipo_identificacion_tipo_identificacion)
REFERENCES public.tipo_identificacion (id_tipo_identificacion) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: personas_pk3 | type: CONSTRAINT --
-- ALTER TABLE public.personas DROP CONSTRAINT IF EXISTS personas_pk3 CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT personas_pk3 FOREIGN KEY (id_estado_civil_estado_civil)
REFERENCES public.estado_civil (id_estado_civil) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: parentesco_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.parentesco DROP CONSTRAINT IF EXISTS parentesco_pk1 CASCADE;
ALTER TABLE public.parentesco ADD CONSTRAINT parentesco_pk1 FOREIGN KEY (id_personas_personas)
REFERENCES public.personas (id_personas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: parentesco_uq | type: CONSTRAINT --
-- ALTER TABLE public.parentesco DROP CONSTRAINT IF EXISTS parentesco_uq CASCADE;
ALTER TABLE public.parentesco ADD CONSTRAINT parentesco_uq UNIQUE (id_personas_personas);
-- ddl-end --

-- object: liderazgos_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.liderazgos DROP CONSTRAINT IF EXISTS liderazgos_pk1 CASCADE;
ALTER TABLE public.liderazgos ADD CONSTRAINT liderazgos_pk1 FOREIGN KEY (id_personas_personas)
REFERENCES public.personas (id_personas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: liderazgos_pk2 | type: CONSTRAINT --
-- ALTER TABLE public.liderazgos DROP CONSTRAINT IF EXISTS liderazgos_pk2 CASCADE;
ALTER TABLE public.liderazgos ADD CONSTRAINT liderazgos_pk2 FOREIGN KEY (id_areas_liderazgo_areas_liderazgo)
REFERENCES public.areas_liderazgo (id_areas_liderazgo) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: tipo_viviendas_pk | type: CONSTRAINT --
-- ALTER TABLE public.tipo_viviendas DROP CONSTRAINT IF EXISTS tipo_viviendas_pk CASCADE;
ALTER TABLE public.tipo_viviendas ADD CONSTRAINT tipo_viviendas_pk FOREIGN KEY (id_familia_familias)
REFERENCES public.familias (id_familia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: enfermedades_persona_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.enfermedades_persona DROP CONSTRAINT IF EXISTS enfermedades_persona_pk1 CASCADE;
ALTER TABLE public.enfermedades_persona ADD CONSTRAINT enfermedades_persona_pk1 FOREIGN KEY (id_personas_personas)
REFERENCES public.personas (id_personas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: enfermedades_persona_pk2 | type: CONSTRAINT --
-- ALTER TABLE public.enfermedades_persona DROP CONSTRAINT IF EXISTS enfermedades_persona_pk2 CASCADE;
ALTER TABLE public.enfermedades_persona ADD CONSTRAINT enfermedades_persona_pk2 FOREIGN KEY (id_enfermedades_enfermedades)
REFERENCES public.enfermedades (id_enfermedades) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: celebraciones_familia_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.celebraciones_familia DROP CONSTRAINT IF EXISTS celebraciones_familia_pk1 CASCADE;
ALTER TABLE public.celebraciones_familia ADD CONSTRAINT celebraciones_familia_pk1 FOREIGN KEY (id_familia_familias)
REFERENCES public.familias (id_familia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: celebraciones_personales_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.celebraciones_personales DROP CONSTRAINT IF EXISTS celebraciones_personales_pk1 CASCADE;
ALTER TABLE public.celebraciones_personales ADD CONSTRAINT celebraciones_personales_pk1 FOREIGN KEY (id_personas_personas)
REFERENCES public.personas (id_personas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: difuntos_familia_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.difuntos_familia DROP CONSTRAINT IF EXISTS difuntos_familia_pk1 CASCADE;
ALTER TABLE public.difuntos_familia ADD CONSTRAINT difuntos_familia_pk1 FOREIGN KEY (id_familia_familias)
REFERENCES public.familias (id_familia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: celebraciones_padre_madre_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.celebraciones_padre_madre DROP CONSTRAINT IF EXISTS celebraciones_padre_madre_pk1 CASCADE;
ALTER TABLE public.celebraciones_padre_madre ADD CONSTRAINT celebraciones_padre_madre_pk1 FOREIGN KEY (id_parentesco_parentesco)
REFERENCES public.parentesco (id_parentesco) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: personas_pk4 | type: CONSTRAINT --
-- ALTER TABLE public.personas DROP CONSTRAINT IF EXISTS personas_pk4 CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT personas_pk4 FOREIGN KEY (id_parroquia_parroquia)
REFERENCES public.parroquia (id_parroquia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: public.persona_destreza | type: TABLE --
-- DROP TABLE IF EXISTS public.persona_destreza CASCADE;
CREATE TABLE public.persona_destreza (
	id_personas_personas bigint,
	id_destrezas_destrezas bigint

);
-- ddl-end --
ALTER TABLE public.persona_destreza OWNER TO postgres;
-- ddl-end --

-- object: personas_fk | type: CONSTRAINT --
-- ALTER TABLE public.persona_destreza DROP CONSTRAINT IF EXISTS personas_fk CASCADE;
ALTER TABLE public.persona_destreza ADD CONSTRAINT personas_fk FOREIGN KEY (id_personas_personas)
REFERENCES public.personas (id_personas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: destrezas_fk | type: CONSTRAINT --
-- ALTER TABLE public.persona_destreza DROP CONSTRAINT IF EXISTS destrezas_fk CASCADE;
ALTER TABLE public.persona_destreza ADD CONSTRAINT destrezas_fk FOREIGN KEY (id_destrezas_destrezas)
REFERENCES public.destrezas (id_destrezas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: familias_fk | type: CONSTRAINT --
-- ALTER TABLE public.sistemas_acueducto DROP CONSTRAINT IF EXISTS familias_fk CASCADE;
ALTER TABLE public.sistemas_acueducto ADD CONSTRAINT familias_fk FOREIGN KEY (id_familia_familias)
REFERENCES public.familias (id_familia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: familias_fk | type: CONSTRAINT --
-- ALTER TABLE public.tipos_aguas_residuales DROP CONSTRAINT IF EXISTS familias_fk CASCADE;
ALTER TABLE public.tipos_aguas_residuales ADD CONSTRAINT familias_fk FOREIGN KEY (id_familia_familias)
REFERENCES public.familias (id_familia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: familias_fk | type: CONSTRAINT --
-- ALTER TABLE public.parroquias DROP CONSTRAINT IF EXISTS familias_fk CASCADE;
ALTER TABLE public.parroquias ADD CONSTRAINT familias_fk FOREIGN KEY (id_familia_familias)
REFERENCES public.familias (id_familia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: personas_fk | type: CONSTRAINT --
-- ALTER TABLE public.niveles_educativos DROP CONSTRAINT IF EXISTS personas_fk CASCADE;
ALTER TABLE public.niveles_educativos ADD CONSTRAINT personas_fk FOREIGN KEY (id_personas_personas)
REFERENCES public.personas (id_personas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: veredas_fk | type: CONSTRAINT --
-- ALTER TABLE public.familias DROP CONSTRAINT IF EXISTS veredas_fk CASCADE;
ALTER TABLE public.familias ADD CONSTRAINT veredas_fk FOREIGN KEY (id_vereda_veredas)
REFERENCES public.veredas (id_vereda) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: municipios_fk | type: CONSTRAINT --
-- ALTER TABLE public.veredas DROP CONSTRAINT IF EXISTS municipios_fk CASCADE;
ALTER TABLE public.veredas ADD CONSTRAINT municipios_fk FOREIGN KEY (id_municipio_municipios)
REFERENCES public.municipios (id_municipio) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: sexo_fk | type: CONSTRAINT --
-- ALTER TABLE public.personas DROP CONSTRAINT IF EXISTS sexo_fk CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT sexo_fk FOREIGN KEY (id_sexo_sexo)
REFERENCES public.sexo (id_sexo) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: familias_fk | type: CONSTRAINT --
-- ALTER TABLE public.tipos_disposicion_basura DROP CONSTRAINT IF EXISTS familias_fk CASCADE;
ALTER TABLE public.tipos_disposicion_basura ADD CONSTRAINT familias_fk FOREIGN KEY (id_familia_familias)
REFERENCES public.familias (id_familia) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: comunidades_culturales_fk | type: CONSTRAINT --
-- ALTER TABLE public.personas DROP CONSTRAINT IF EXISTS comunidades_culturales_fk CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT comunidades_culturales_fk FOREIGN KEY (id_comunidades_culturales_comunidades_culturales)
REFERENCES public.comunidades_culturales (id_comunidades_culturales) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: sector_fk | type: CONSTRAINT --
-- ALTER TABLE public.veredas DROP CONSTRAINT IF EXISTS sector_fk CASCADE;
ALTER TABLE public.veredas ADD CONSTRAINT sector_fk FOREIGN KEY (id_sector_sector)
REFERENCES public.sector (id_sector) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: personas_fk | type: CONSTRAINT --
-- ALTER TABLE public.necesidades_enfermo DROP CONSTRAINT IF EXISTS personas_fk CASCADE;
ALTER TABLE public.necesidades_enfermo ADD CONSTRAINT personas_fk FOREIGN KEY (id_personas_personas)
REFERENCES public.personas (id_personas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: personas_fk | type: CONSTRAINT --
-- ALTER TABLE public.talla_vestimenta DROP CONSTRAINT IF EXISTS personas_fk CASCADE;
ALTER TABLE public.talla_vestimenta ADD CONSTRAINT personas_fk FOREIGN KEY (id_personas_personas)
REFERENCES public.personas (id_personas) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: public.usuarios_roles | type: TABLE --
-- DROP TABLE IF EXISTS public.usuarios_roles CASCADE;
CREATE TABLE public.usuarios_roles (
	id_usuarios uuid,
	id_roles uuid

);
-- ddl-end --
ALTER TABLE public.usuarios_roles OWNER TO postgres;
-- ddl-end --

-- object: usuarios_roles_pk | type: CONSTRAINT --
-- ALTER TABLE public.usuarios_roles DROP CONSTRAINT IF EXISTS usuarios_roles_pk CASCADE;
ALTER TABLE public.usuarios_roles ADD CONSTRAINT usuarios_roles_pk FOREIGN KEY (id_usuarios)
REFERENCES public.usuarios (id) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: usuarios_roles_pk1 | type: CONSTRAINT --
-- ALTER TABLE public.usuarios_roles DROP CONSTRAINT IF EXISTS usuarios_roles_pk1 CASCADE;
ALTER TABLE public.usuarios_roles ADD CONSTRAINT usuarios_roles_pk1 FOREIGN KEY (id_roles)
REFERENCES public.roles (id) MATCH FULL
ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --


