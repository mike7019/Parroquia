-- Database generated with pgModeler (PostgreSQL Database Modeler).
-- pgModeler version: 1.0.0-beta1
-- PostgreSQL version: 15.0
-- Project Site: pgmodeler.io
-- Model Author: ---

-- Database creation must be performed outside a multi lined SQL file.
-- These commands were put in this file only as a convenience.
--
-- object: caracterizacion | type: DATABASE --
-- DROP DATABASE IF EXISTS caracterizacion;
-- CREATE DATABASE caracterizacion
--  ENCODING = 'UTF8'
--  LC_COLLATE = 'es_CO'
--  LC_CTYPE = 'es_CO'
--  TABLESPACE = pg_default
--  OWNER = postgres;
-- ddl-end --

-- object: test | type: SCHEMA --
-- DROP SCHEMA IF EXISTS test CASCADE;
CREATE SCHEMA IF NOT EXISTS test;
-- ddl-end --
ALTER SCHEMA test OWNER TO postgres;
-- ddl-end --

SET search_path TO pg_catalog,public,test;
-- ddl-end --

-- TABLAS DE CATÁLOGO (LOOKUP TABLES) --

CREATE TABLE public.tipo_identificacion (
    id_tipo_identificacion bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
    descripcion character varying(255) NOT NULL,
    CONSTRAINT tipo_identificacion_pk PRIMARY KEY (id_tipo_identificacion)
);
ALTER TABLE public.tipo_identificacion OWNER TO postgres;
INSERT INTO public.tipo_identificacion (id_tipo_identificacion, descripcion) VALUES ('1', '\Registro civil'), ('2', '\Tarjeta de identidad'), ('3', '\Contraseña'), ('4', '\Cedula'), ('5', '\Pasaporte'), ('6', '\NIT');

CREATE TABLE public.estado_civil (
    id_estado_civil bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    descripcion character varying(255) NOT NULL,
    CONSTRAINT estado_civil_pk PRIMARY KEY (id_estado_civil)
);
ALTER TABLE public.estado_civil OWNER TO postgres;
INSERT INTO public.estado_civil (id_estado_civil, descripcion) VALUES ('1', '\Soltero/a'), ('2', '\Casado/a'), ('3', '\Viudo/a'), ('4', '\Union libre'), ('5', '\Divorciado/a'), ('6', '\Padre cabeza de hogar'), ('7', '\Madre cabeza de hogar'), ('8', '\Matrimonio religioso');

CREATE TABLE public.parroquia (
    id_parroquia bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre character varying(255) NOT NULL,
    CONSTRAINT parroquia_pk PRIMARY KEY (id_parroquia)
);
ALTER TABLE public.parroquia OWNER TO postgres;

CREATE TABLE public.parentesco (
    id_parentesco bigserial PRIMARY KEY,
    nombre character varying(255) NOT NULL
);
ALTER TABLE public.parentesco OWNER TO postgres;
INSERT INTO public.parentesco (nombre) VALUES ('Padr'\), ('Madr'\), ('Hijo(a)'), ('Abuelo(a)'), ('Primo(a)'), ('Hermano(a)'), ('Sobrino(a)'), ('Tio(a)'), ('Nieto(a)'), ('Adoptado(a)');


CREATE TABLE public.tipo_viviendas (
    id_tipo_vivienda bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    descripcion character varying(255),
    CONSTRAINT tipo_vivienda_pk PRIMARY KEY (id_tipo_vivienda)
);
ALTER TABLE public.tipo_viviendas OWNER TO postgres;
INSERT INTO public.tipo_viviendas (id_tipo_vivienda, descripcion) VALUES ('1', '\Propia'), ('2', '\Arrendada'), ('3', '\Familiar'), ('4', '\Invasion');

CREATE TABLE public.tipos_disposicion_basura (
    id_tipos_disposicion_basura bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    metodo character varying(255) NOT NULL,
    CONSTRAINT tipos_disposicion_basura_pk PRIMARY KEY (id_tipos_disposicion_basura)
);
ALTER TABLE public.tipos_disposicion_basura OWNER TO postgres;
INSERT INTO public.tipos_disposicion_basura (id_tipos_disposicion_basura, metodo) VALUES ('1', '\Al aire libre'), ('2', '\Carro recolector'), ('3', '\Compostaje'), ('4', '\En tierra'), ('5', '\Reciclaje');

CREATE TABLE public.sistemas_acueducto (
    id_sistemas_acueducto bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    proveedor character varying(255) NOT NULL,
    metodo_abastecimiento character varying(255) NOT NULL,
    descripcion character varying(255) NOT NULL,
    CONSTRAINT sistemas_acueducto_pk PRIMARY KEY (id_sistemas_acueducto)
);
ALTER TABLE public.sistemas_acueducto OWNER TO postgres;

CREATE TABLE public.tipos_aguas_residuales (
    id_tipos_aguas_residuales bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    metodo character varying(255) NOT NULL,
    CONSTRAINT tipos_aguas_residuales_pk PRIMARY KEY (id_tipos_aguas_residuales)
);
ALTER TABLE public.tipos_aguas_residuales OWNER TO postgres;
INSERT INTO public.tipos_aguas_residuales (id_tipos_aguas_residuales, metodo) VALUES ('1', '\Alcantarillado'), ('2', '\Al aire libre'), ('3', '\Pozo septico'), ('4', '\Quebradas');

CREATE TABLE public.niveles_educativos (
    id_niveles_educativos bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nivel character varying(255) NOT NULL,
    CONSTRAINT niveles_educativos_pk PRIMARY KEY (id_niveles_educativos)
);
ALTER TABLE public.niveles_educativos OWNER TO postgres;
INSERT INTO public.niveles_educativos (id_niveles_educativos, nivel) VALUES ('1', '\Primaria'), ('2', '\Bachillerato'), ('3', '\Pregrado'), ('4', '\Posgrado'), ('5', '\Maestria'), ('6', '\Doctorado'), ('7', '\Tecnico'), ('8', '\Tecnologo'), ('9', '\Sin estudios'), ('10', '\Cursos'), ('11', '\Diplomado'), ('12', '\Seminario');

CREATE TABLE public.sexo (
    id_sexo bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    descripcion character varying(255) NOT NULL,
    CONSTRAINT sexo_pk PRIMARY KEY (id_sexo)
);
ALTER TABLE public.sexo OWNER TO postgres;
INSERT INTO public.sexo (id_sexo, descripcion) VALUES ('1', '\Masculino'), ('2', '\Femenino');

CREATE TABLE public.comunidades_culturales (
    id_comunidades_culturales bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    descripcion character varying(255) NOT NULL,
    CONSTRAINT comunidades_culturales_pk PRIMARY KEY (id_comunidades_culturales)
);
ALTER TABLE public.comunidades_culturales OWNER TO postgres;

CREATE TABLE public.areas_liderazgo (
    id_areas_liderazgo bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre character varying(255) NOT NULL,
    descripcion character varying(255) NOT NULL,
    CONSTRAINT areas_liderazgo_pk PRIMARY KEY (id_areas_liderazgo)
);
ALTER TABLE public.areas_liderazgo OWNER TO postgres;

CREATE TABLE public.destrezas (
    id_destrezas bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre character varying(255) NOT NULL,
    CONSTRAINT destrezas_pk PRIMARY KEY (id_destrezas)
);
ALTER TABLE public.destrezas OWNER TO postgres;

CREATE TABLE public.enfermedades (
    id_enfermedades smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre character varying(255) NOT NULL,
    CONSTRAINT enfermedades_pk PRIMARY KEY (id_enfermedades)
);
ALTER TABLE public.enfermedades OWNER TO postgres;

CREATE TABLE public.municipios (
    id_municipio bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre_municipio character varying(255) NOT NULL,
    CONSTRAINT municipios_pk PRIMARY KEY (id_municipio)
);
ALTER TABLE public.municipios OWNER TO postgres;

CREATE TABLE public.sector (
    id_sector bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre character varying(255) NOT NULL,
    CONSTRAINT sector_pk PRIMARY KEY (id_sector)
);
ALTER TABLE public.sector OWNER TO postgres;

CREATE TABLE public.roles (
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    nombre character varying(255) NOT NULL,
    CONSTRAINT roles_pk PRIMARY KEY (id)
);
ALTER TABLE public.roles OWNER TO postgres;

-- TABLAS PRINCIPALES --

CREATE TABLE public.usuarios (
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    primer_nombre character varying(255) NOT NULL,
    segundo_nombre character varying(255),
    primer_apellido character varying(255) NOT NULL,
    segundo_apellido character varying(255),
    correo_electronico character varying(255) NOT NULL,
    contrasena character varying(255) NOT NULL,
    activo boolean DEFAULT TRUE,
    CONSTRAINT usuarios_pk PRIMARY KEY (id),
    CONSTRAINT usuarios_correo_electronico_unique UNIQUE (correo_electronico)
);
ALTER TABLE public.usuarios OWNER TO postgres;

CREATE TABLE public.veredas (
    id_vereda bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre character varying(255) NOT NULL,
    id_municipio_municipios bigint,
    id_sector_sector bigint,
    CONSTRAINT veredas_pk PRIMARY KEY (id_vereda)
);
ALTER TABLE public.veredas OWNER TO postgres;

CREATE TABLE public.familias (
    id_familia bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    uuid_familia char(36) NOT NULL,
    nombre_familia character varying(255) NOT NULL,
    direccion_familia character varying(255) NOT NULL,
    numero_contrato_epm character varying(255),
    tratamiento_datos boolean DEFAULT FALSE,
    observaciones character varying(255),
    id_vereda_veredas bigint,
    telefono_familiar character varying(255),
    sustento_familia text,
    CONSTRAINT familias_pk PRIMARY KEY (id_familia)
);
ALTER TABLE public.familias OWNER TO postgres;

CREATE TABLE public.personas (
    id_personas bigserial NOT NULL,
    primer_nombre character varying(255) NOT NULL,
    segundo_nombre character varying(255),
    primer_apellido character varying(255) NOT NULL,
    segundo_apellido character varying(255),
    id_tipo_identificacion_tipo_identificacion bigint,
    identificacion character varying(255) NOT NULL,
    telefono character varying(255) NOT NULL,
    correo_electronico character varying(255) NOT NULL,
    fecha_nacimiento date NOT NULL,
    direccion character varying(255) NOT NULL,
    id_familia_familias bigint,
    id_estado_civil_estado_civil bigint,
    id_parroquia_parroquia bigint,
    id_sexo_sexo bigint,
    id_comunidades_culturales_comunidades_culturales bigint,
    id_parentesco_parentesco bigint,
    CONSTRAINT personas_pk PRIMARY KEY (id_personas),
    CONSTRAINT personas_identificacion_unique UNIQUE (identificacion),
    CONSTRAINT personas_correo_electronico_unique UNIQUE (correo_electronico)
);
ALTER TABLE public.personas OWNER TO postgres;

-- TABLAS DE RELACIÓN (JUNCTION/INTERMEDIATE TABLES) --

CREATE TABLE public.liderazgos (
    id_liderazgos bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    fecha_inicio date NOT NULL,
    fecha_fin date,
    activo boolean DEFAULT TRUE,
    id_personas_personas bigint,
    id_areas_liderazgo_areas_liderazgo bigint,
    CONSTRAINT liderazgos_pk PRIMARY KEY (id_liderazgos)
);
ALTER TABLE public.liderazgos OWNER TO postgres;

CREATE TABLE public.enfermedades_persona (
    id_enfermedades_persona bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    id_personas_personas bigint,
    id_enfermedades_enfermedades smallint,
    CONSTRAINT enfermedades_persona_pk PRIMARY KEY (id_enfermedades_persona)
);
ALTER TABLE public.enfermedades_persona OWNER TO postgres;

CREATE TABLE public.difuntos_familia (
    id_difunto bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre_completo character varying(255) NOT NULL,
    fecha_fallecimiento date NOT NULL,
    observaciones text,
    id_familia_familias bigint,
    CONSTRAINT difuntos_familia_pk PRIMARY KEY (id_difunto)
);
ALTER TABLE public.difuntos_familia OWNER TO postgres;

CREATE TABLE public.celebraciones_personales (
    id_celebracion bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    profesion character varying(255) NOT NULL,
    motivo character varying(255) NOT NULL,
    fecha date NOT NULL,
    id_personas_personas bigint,
    CONSTRAINT celebraciones_personales_pk PRIMARY KEY (id_celebracion)
);
ALTER TABLE public.celebraciones_personales OWNER TO postgres;

CREATE TABLE public.celebraciones_familia (
    id_celebracion bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    motivo character varying(255) NOT NULL,
    fecha date NOT NULL,
    id_familia_familias bigint,
    CONSTRAINT celebraciones_familia_pk PRIMARY KEY (id_celebracion)
);
ALTER TABLE public.celebraciones_familia OWNER TO postgres;

CREATE TABLE public.celebraciones_padre_madre (
    id_celebracion bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    rol varchar(10) NOT NULL,
    fecha_celebracion date NOT NULL,
    es_difunto boolean NOT NULL,
    observaciones text,
    id_parentesco_parentesco bigint,
    CONSTRAINT celebraciones_padre_madre_pk PRIMARY KEY (id_celebracion)
);
ALTER TABLE public.celebraciones_padre_madre OWNER TO postgres;

CREATE TABLE public.necesidades_enfermo (
    id_necesidad bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    solicita_comunion boolean NOT NULL DEFAULT FALSE,
    otras_necesidades text NOT NULL,
    fecha_registro timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
    id_personas_personas bigint,
    CONSTRAINT necesidades_enfermo_pk PRIMARY KEY (id_necesidad)
);
ALTER TABLE public.necesidades_enfermo OWNER TO postgres;

CREATE TABLE public.persona_destreza (
    id_personas_personas bigint,
    id_destrezas_destrezas bigint
);
ALTER TABLE public.persona_destreza OWNER TO postgres;

CREATE TABLE public.usuarios_roles (
    id_usuarios uuid,
    id_roles uuid
);
ALTER TABLE public.usuarios_roles OWNER TO postgres;

CREATE TABLE public.persona_tallas (
    id_persona_talla bigserial PRIMARY KEY,
    id_personas_personas bigint NOT NULL,
    tipo_prenda character varying(100) NOT NULL,
    talla character varying(50) NOT NULL
);
ALTER TABLE public.persona_tallas OWNER TO postgres;

CREATE TABLE public.encuestas (
    id_encuesta bigserial PRIMARY KEY,
    id_familia_familias bigint NOT NULL,
    id_usuario_encuestador uuid,
    fecha_encuesta date NOT NULL DEFAULT CURRENT_DATE,
    observaciones_encuestador text
);
ALTER TABLE public.encuestas OWNER TO postgres;

-- DEFINICIÓN DE RELACIONES (FOREIGN KEYS) --

-- Relaciones de la tabla 'personas'
ALTER TABLE public.personas ADD CONSTRAINT fk_personas_familia FOREIGN KEY (id_familia_familias) REFERENCES public.familias (id_familia) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT fk_personas_tipo_id FOREIGN KEY (id_tipo_identificacion_tipo_identificacion) REFERENCES public.tipo_identificacion (id_tipo_identificacion) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT fk_personas_estado_civil FOREIGN KEY (id_estado_civil_estado_civil) REFERENCES public.estado_civil (id_estado_civil) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT fk_personas_parroquia FOREIGN KEY (id_parroquia_parroquia) REFERENCES public.parroquia (id_parroquia) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT fk_personas_sexo FOREIGN KEY (id_sexo_sexo) REFERENCES public.sexo (id_sexo) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT fk_personas_comunidad_cultural FOREIGN KEY (id_comunidades_culturales_comunidades_culturales) REFERENCES public.comunidades_culturales (id_comunidades_culturales) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.personas ADD CONSTRAINT fk_personas_parentesco FOREIGN KEY (id_parentesco_parentesco) REFERENCES public.parentesco (id_parentesco) ON DELETE SET NULL ON UPDATE CASCADE;

-- Relaciones de la tabla 'familias'
ALTER TABLE public.familias ADD CONSTRAINT fk_familias_vereda FOREIGN KEY (id_vereda_veredas) REFERENCES public.veredas (id_vereda) ON DELETE SET NULL ON UPDATE CASCADE;

-- Relaciones de la tabla 'veredas'
ALTER TABLE public.veredas ADD CONSTRAINT fk_veredas_municipio FOREIGN KEY (id_municipio_municipios) REFERENCES public.municipios (id_municipio) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.veredas ADD CONSTRAINT fk_veredas_sector FOREIGN KEY (id_sector_sector) REFERENCES public.sector (id_sector) ON DELETE SET NULL ON UPDATE CASCADE;

-- Relaciones de tablas de características y eventos
ALTER TABLE public.liderazgos ADD CONSTRAINT fk_liderazgos_persona FOREIGN KEY (id_personas_personas) REFERENCES public.personas (id_personas) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.liderazgos ADD CONSTRAINT fk_liderazgos_area FOREIGN KEY (id_areas_liderazgo_areas_liderazgo) REFERENCES public.areas_liderazgo (id_areas_liderazgo) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.enfermedades_persona ADD CONSTRAINT fk_enfermedad_persona_persona FOREIGN KEY (id_personas_personas) REFERENCES public.personas (id_personas) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.enfermedades_persona ADD CONSTRAINT fk_enfermedad_persona_enfermedad FOREIGN KEY (id_enfermedades_enfermedades) REFERENCES public.enfermedades (id_enfermedades) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.difuntos_familia ADD CONSTRAINT fk_difuntos_familia FOREIGN KEY (id_familia_familias) REFERENCES public.familias (id_familia) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.celebraciones_personales ADD CONSTRAINT fk_celebracion_personal_persona FOREIGN KEY (id_personas_personas) REFERENCES public.personas (id_personas) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.celebraciones_familia ADD CONSTRAINT fk_celebracion_familia_familia FOREIGN KEY (id_familia_familias) REFERENCES public.familias (id_familia) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.celebraciones_padre_madre ADD CONSTRAINT fk_celebracion_padre_madre_parentesco FOREIGN KEY (id_parentesco_parentesco) REFERENCES public.parentesco (id_parentesco) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.necesidades_enfermo ADD CONSTRAINT fk_necesidades_enfermo_persona FOREIGN KEY (id_personas_personas) REFERENCES public.personas (id_personas) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.persona_destreza ADD CONSTRAINT fk_persona_destreza_persona FOREIGN KEY (id_personas_personas) REFERENCES public.personas (id_personas) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.persona_destreza ADD CONSTRAINT fk_persona_destreza_destreza FOREIGN KEY (id_destrezas_destrezas) REFERENCES public.destrezas (id_destrezas) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.usuarios_roles ADD CONSTRAINT fk_usuarios_roles_usuario FOREIGN KEY (id_usuarios) REFERENCES public.usuarios (id) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.usuarios_roles ADD CONSTRAINT fk_usuarios_roles_rol FOREIGN KEY (id_roles) REFERENCES public.roles (id) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.persona_tallas ADD CONSTRAINT fk_persona_tallas_persona FOREIGN KEY (id_personas_personas) REFERENCES public.personas (id_personas) ON DELETE CASCADE ON UPDATE CASCADE;

-- Relaciones de la tabla 'encuestas'
ALTER TABLE public.encuestas ADD CONSTRAINT fk_encuestas_familia FOREIGN KEY (id_familia_familias) REFERENCES public.familias (id_familia) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE public.encuestas ADD CONSTRAINT fk_encuestas_usuario FOREIGN KEY (id_usuario_encuestador) REFERENCES public.usuarios (id) ON DELETE SET NULL ON UPDATE CASCADE;
