version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: parroquia-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: parroquia_db
      POSTGRES_USER: parroquia_user
      POSTGRES_PASSWORD: ${DB_PASS:-parroquia_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - parroquia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U parroquia_user -d parroquia_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Parroquia API Application
  api:
    build: .
    container_name: parroquia-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS}
      - FRONTEND_URL=${FRONTEND_URL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
      - SEND_REAL_EMAILS=${SEND_REAL_EMAILS}
      - VERBOSE_LOGGING=${VERBOSE_LOGGING}
    ports:
      - "3000:3000"
    networks:
      - parroquia-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  parroquia-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local
