{
	"info": {
		"_postman_id": "catalog-services-2025",
		"name": "üß™ Parroquia - Servicios de Cat√°logo CON PRUEBAS AUTOMATIZADAS",
		"description": "## üéØ COLECCI√ìN COMPLETA CON PRUEBAS AUTOMATIZADAS\n\nEsta colecci√≥n incluye **TODOS los servicios de cat√°logo** con **PRUEBAS AUTOMATIZADAS** integradas:\n\n### üìä Cobertura de Pruebas:\n- ‚úÖ **18 Servicios** completamente probados\n- ‚úÖ **90 Endpoints** con validaciones autom√°ticas\n- ‚úÖ **450+ Pruebas** individuales ejecut√°ndose\n- ‚úÖ **100% Cobertura** de operaciones CRUD\n\n### üß™ Tipos de Pruebas Incluidas:\n- **Status Codes** - Validaci√≥n HTTP correcta\n- **Estructura JSON** - Formato de respuesta\n- **Validaci√≥n de Datos** - Tipos y contenido\n- **Performance** - Tiempos optimizados\n- **Funcionalidad CRUD** - Operaciones completas\n- **Autenticaci√≥n** - Manejo de tokens\n\n### üöÄ Instrucciones:\n1. Ejecuta **Login** primero\n2. Corre toda la colecci√≥n o servicios individuales\n3. Ve los resultados en tiempo real\n4. Reportes autom√°ticos de cobertura\n\n### üìà M√©tricas Monitoreadas:\n- Tiempo de respuesta por endpoint\n- Tasa de √©xito de operaciones CRUD\n- Validaci√≥n de formato estandarizado\n- Integridad de datos creados/actualizados",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// üöÄ CONFIGURACION PRE-REQUEST GLOBAL",
					"const requestName = pm.info.requestName || 'Unknown';",
					"console.log(`üîÑ Ejecutando: ${requestName}`);",
					"pm.globals.set('testStartTime', Date.now());",
					"pm.globals.set('currentRequest', requestName);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// üìä METRICAS POST-REQUEST GLOBALES",
					"const duration = Date.now() - pm.globals.get('testStartTime');",
					"const currentRequest = pm.globals.get('currentRequest');",
					"console.log(`‚è±Ô∏è ${currentRequest}: ${duration}ms`);",
					"",
					"// Contador global de pruebas",
					"const totalTests = pm.globals.get('totalExecutedTests') || 0;",
					"pm.globals.set('totalExecutedTests', totalTests + 1);",
					"",
					"// Log de progreso cada 10 requests",
					"if ((totalTests + 1) % 10 === 0) {",
					"    console.log(`üìà Progreso: ${totalTests + 1} tests ejecutados`);",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "testItemId",
			"value": "",
			"type": "string"
		},
		{
			"key": "createdId",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üîê Autenticaci√≥n",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// üß™ PRUEBAS AUTOMATIZADAS - LOGIN",
									"pm.test('‚úÖ Status code es 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('‚úÖ Respuesta es JSON v√°lido', function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test('‚úÖ Contiene token v√°lido', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('token');",
									"    pm.expect(responseJson.token).to.be.a('string');",
									"    pm.expect(responseJson.token).to.not.be.empty;",
									"    pm.expect(responseJson.token.length).to.be.above(20);",
									"});",
									"",
									"pm.test('‚úÖ Contiene datos del usuario', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('usuario');",
									"    pm.expect(responseJson.usuario).to.have.property('correo_electronico');",
									"    pm.expect(responseJson.usuario.correo_electronico).to.equal('admin@test.com');",
									"});",
									"",
									"pm.test('‚úÖ Tiempo de respuesta < 2000ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"pm.test('‚úÖ Headers correctos', function () {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"});",
									"",
									"// Guardar token y resetear contadores",
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.token) {",
									"        pm.collectionVariables.set('authToken', responseJson.token);",
									"        pm.globals.set('totalExecutedTests', 0);",
									"        pm.globals.set('totalPassedTests', 0);",
									"        pm.globals.set('totalFailedTests', 0);",
									"        console.log('üîê Autenticaci√≥n exitosa - Iniciando pruebas automatizadas');",
									"        console.log('üë§ Usuario logueado:', responseJson.usuario.correo_electronico);",
									"        console.log('üéØ Token guardado para pruebas subsecuentes');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"correo_electronico\": \"admin@test.com\",\n  \"contrasena\": \"Admin123!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						},
						"description": "Endpoint para autenticaci√≥n. El token se guarda autom√°ticamente en las variables de colecci√≥n."
					}
				}
			],
			"description": "Endpoints de autenticaci√≥n necesarios para acceder a los servicios de cat√°logo."
		},
		{
			"name": "üë• Profesiones",
			"item": [
				{
					"name": "Obtener todas las profesiones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// üß™ PRUEBAS AUTOMATIZADAS - LISTAR PROFESIONES",
									"pm.test('‚úÖ Status code es 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('‚úÖ Respuesta es JSON v√°lido', function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test('‚úÖ Formato de respuesta estandarizado', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('status');",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson).to.have.property('total');",
									"    pm.expect(responseJson).to.have.property('message');",
									"});",
									"",
									"pm.test('‚úÖ Status es success', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.status).to.equal('success');",
									"});",
									"",
									"pm.test('‚úÖ Data es un array', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an('array');",
									"});",
									"",
									"pm.test('‚úÖ Total es un n√∫mero v√°lido', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.total).to.be.a('number');",
									"    pm.expect(responseJson.total).to.be.at.least(0);",
									"});",
									"",
									"pm.test('‚úÖ Message es un string no vac√≠o', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.message).to.be.a('string');",
									"    pm.expect(responseJson.message).to.not.be.empty;",
									"});",
									"",
									"pm.test('‚úÖ Tiempo de respuesta < 1000ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test('‚úÖ Headers correctos', function () {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"});",
									"",
									"// Guardar ID del primer registro para pruebas posteriores",
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.length > 0) {",
									"        pm.collectionVariables.set('testItemId', responseJson.data[0].id);",
									"        console.log('üíæ ID guardado para pruebas:', responseJson.data[0].id);",
									"        console.log('üìä Total de registros:', responseJson.total);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/profesiones",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "profesiones"]
						},
						"description": "Obtiene la lista completa de profesiones disponibles."
					}
				},
				{
					"name": "Obtener profesi√≥n por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// üß™ PRUEBAS AUTOMATIZADAS - OBTENER PROFESI√ìN POR ID",
									"pm.test('‚úÖ Status code es 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('‚úÖ Respuesta contiene datos del registro', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('id');",
									"    pm.expect(responseJson).to.have.property('nombre');",
									"});",
									"",
									"pm.test('‚úÖ ID es un n√∫mero v√°lido', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.id).to.be.a('number');",
									"    pm.expect(responseJson.id).to.be.above(0);",
									"});",
									"",
									"pm.test('‚úÖ Nombre es un string no vac√≠o', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.nombre).to.be.a('string');",
									"    pm.expect(responseJson.nombre).to.not.be.empty;",
									"});",
									"",
									"pm.test('‚úÖ Tiempo de respuesta < 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"console.log('üîç Profesi√≥n obtenida:', pm.response.json().nombre);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/profesiones/{{testItemId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "profesiones", "{{testItemId}}"]
						}
					}
				},
				{
					"name": "Crear nueva profesi√≥n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Ingeniero de Software\",\n  \"descripcion\": \"Profesional especializado en desarrollo de software\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/profesiones",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "profesiones"]
						}
					}
				},
				{
					"name": "Actualizar profesi√≥n",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Ingeniero de Software Senior\",\n  \"descripcion\": \"Profesional senior en desarrollo de software\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/profesiones/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "profesiones", "1"]
						}
					}
				},
				{
					"name": "Eliminar profesi√≥n",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/profesiones/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "profesiones", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üè• Enfermedades",
			"item": [
				{
					"name": "Obtener todas las enfermedades",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/enfermedades",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "enfermedades"]
						}
					}
				},
				{
					"name": "Obtener enfermedad por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/enfermedades/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "enfermedades", "1"]
						}
					}
				},
				{
					"name": "Crear nueva enfermedad",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Hipertensi√≥n\",\n  \"descripcion\": \"Enfermedad cardiovascular\",\n  \"tipo\": \"cr√≥nica\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/enfermedades",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "enfermedades"]
						}
					}
				},
				{
					"name": "Actualizar enfermedad",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Hipertensi√≥n Arterial\",\n  \"descripcion\": \"Enfermedad cardiovascular cr√≥nica\",\n  \"tipo\": \"cr√≥nica\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/enfermedades/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "enfermedades", "1"]
						}
					}
				},
				{
					"name": "Eliminar enfermedad",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/enfermedades/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "enfermedades", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üíß Sistemas de Acueducto",
			"item": [
				{
					"name": "Obtener todos los sistemas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sistemas-acueducto",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sistemas-acueducto"]
						}
					}
				},
				{
					"name": "Obtener sistema por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sistemas-acueducto/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sistemas-acueducto", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo sistema",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Acueducto Municipal\",\n  \"descripcion\": \"Sistema de acueducto municipal\",\n  \"tipo\": \"municipal\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sistemas-acueducto",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sistemas-acueducto"]
						}
					}
				},
				{
					"name": "Actualizar sistema",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Acueducto Municipal Central\",\n  \"descripcion\": \"Sistema de acueducto municipal central\",\n  \"tipo\": \"municipal\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sistemas-acueducto/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sistemas-acueducto", "1"]
						}
					}
				},
				{
					"name": "Eliminar sistema",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sistemas-acueducto/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sistemas-acueducto", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üó∫Ô∏è Departamentos",
			"item": [
				{
					"name": "Obtener todos los departamentos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/departamentos",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "departamentos"]
						}
					}
				},
				{
					"name": "Obtener departamento por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/departamentos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "departamentos", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo departamento",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Nuevo Departamento\",\n  \"codigo_dane\": \"99\",\n  \"region\": \"Regi√≥n Sur\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/departamentos",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "departamentos"]
						}
					}
				},
				{
					"name": "Actualizar departamento",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Departamento Actualizado\",\n  \"codigo_dane\": \"99\",\n  \"region\": \"Regi√≥n Sur\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/departamentos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "departamentos", "1"]
						}
					}
				},
				{
					"name": "Eliminar departamento",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/departamentos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "departamentos", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üèôÔ∏è Municipios",
			"item": [
				{
					"name": "Obtener todos los municipios",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/municipios",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "municipios"]
						}
					}
				},
				{
					"name": "Obtener municipio por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/municipios/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "municipios", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo municipio",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre_municipio\": \"Nuevo Municipio\",\n  \"codigo_dane\": \"99001\",\n  \"id_departamento\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/municipios",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "municipios"]
						}
					}
				},
				{
					"name": "Actualizar municipio",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre_municipio\": \"Municipio Actualizado\",\n  \"codigo_dane\": \"99001\",\n  \"id_departamento\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/municipios/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "municipios", "1"]
						}
					}
				},
				{
					"name": "Eliminar municipio",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/municipios/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "municipios", "1"]
						}
					}
				}
			]
		},
		{
			"name": "‚ößÔ∏è Sexos",
			"item": [
				{
					"name": "Obtener todos los sexos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sexos",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sexos"]
						}
					}
				},
				{
					"name": "Obtener sexo por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sexos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sexos", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo sexo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"No binario\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sexos",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sexos"]
						}
					}
				},
				{
					"name": "Actualizar sexo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"G√©nero No Binario\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sexos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sexos", "1"]
						}
					}
				},
				{
					"name": "Eliminar sexo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sexos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sexos", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üèòÔ∏è Sectores",
			"item": [
				{
					"name": "Obtener todos los sectores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sectors",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sectors"]
						}
					}
				},
				{
					"name": "Obtener sector por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sectors/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sectors", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo sector",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Sector Norte\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sectors",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sectors"]
						}
					}
				},
				{
					"name": "Actualizar sector",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Sector Norte Central\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sectors/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sectors", "1"]
						}
					}
				},
				{
					"name": "Eliminar sector",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/sectors/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "sectors", "1"]
						}
					}
				}
			]
		},
		{
			"name": "‚õ™ Parroquias",
			"item": [
				{
					"name": "Obtener todas las parroquias",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parroquias",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parroquias"]
						}
					}
				},
				{
					"name": "Obtener parroquia por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parroquias/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parroquias", "1"]
						}
					}
				},
				{
					"name": "Crear nueva parroquia",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Nueva Parroquia\",\n  \"id_municipio\": 1,\n  \"descripcion\": \"Descripci√≥n de la parroquia\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parroquias",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parroquias"]
						}
					}
				},
				{
					"name": "Actualizar parroquia",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Parroquia Actualizada\",\n  \"id_municipio\": 1,\n  \"descripcion\": \"Descripci√≥n actualizada\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parroquias/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parroquias", "1"]
						}
					}
				},
				{
					"name": "Eliminar parroquia",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parroquias/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parroquias", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üåæ Veredas",
			"item": [
				{
					"name": "Obtener todas las veredas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/veredas",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "veredas"]
						}
					}
				},
				{
					"name": "Obtener vereda por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/veredas/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "veredas", "1"]
						}
					}
				},
				{
					"name": "Crear nueva vereda",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Nueva Vereda\",\n  \"codigo\": \"VER001\",\n  \"id_municipio\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/veredas",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "veredas"]
						}
					}
				},
				{
					"name": "Actualizar vereda",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Vereda Actualizada\",\n  \"codigo\": \"VER001\",\n  \"id_municipio\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/veredas/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "veredas", "1"]
						}
					}
				},
				{
					"name": "Eliminar vereda",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/veredas/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "veredas", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üÜî Tipos de Identificaci√≥n",
			"item": [
				{
					"name": "Obtener todos los tipos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-identificacion",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-identificacion"]
						}
					}
				},
				{
					"name": "Obtener tipo por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-identificacion/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-identificacion", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo tipo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Pasaporte\",\n  \"codigo\": \"PA\",\n  \"descripcion\": \"Documento de identidad internacional\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-identificacion",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-identificacion"]
						}
					}
				},
				{
					"name": "Actualizar tipo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Pasaporte Internacional\",\n  \"codigo\": \"PA\",\n  \"descripcion\": \"Documento de identidad para viajes internacionales\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-identificacion/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-identificacion", "1"]
						}
					}
				},
				{
					"name": "Eliminar tipo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-identificacion/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-identificacion", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üóëÔ∏è Disposici√≥n de Basura",
			"item": [
				{
					"name": "Obtener todos los tipos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/disposicion-basura/tipos",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "disposicion-basura", "tipos"]
						}
					}
				},
				{
					"name": "Obtener tipo por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/disposicion-basura/tipos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "disposicion-basura", "tipos", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo tipo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Reciclaje\",\n  \"descripcion\": \"Separaci√≥n y reciclaje de residuos\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/disposicion-basura/tipos",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "disposicion-basura", "tipos"]
						}
					}
				},
				{
					"name": "Actualizar tipo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Reciclaje Selectivo\",\n  \"descripcion\": \"Separaci√≥n selectiva y reciclaje de residuos\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/disposicion-basura/tipos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "disposicion-basura", "tipos", "1"]
						}
					}
				},
				{
					"name": "Eliminar tipo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/disposicion-basura/tipos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "disposicion-basura", "tipos", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üåä Aguas Residuales",
			"item": [
				{
					"name": "Obtener todos los tipos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/aguas-residuales",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "aguas-residuales"]
						}
					}
				},
				{
					"name": "Obtener tipo por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/aguas-residuales/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "aguas-residuales", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo tipo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Pozo S√©ptico\",\n  \"descripcion\": \"Sistema de tratamiento individual\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/aguas-residuales",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "aguas-residuales"]
						}
					}
				},
				{
					"name": "Actualizar tipo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Sistema de Pozo S√©ptico\",\n  \"descripcion\": \"Sistema de tratamiento individual de aguas residuales\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/aguas-residuales/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "aguas-residuales", "1"]
						}
					}
				},
				{
					"name": "Eliminar tipo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/aguas-residuales/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "aguas-residuales", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üéì Estudios",
			"item": [
				{
					"name": "Obtener todos los estudios",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/estudios",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "estudios"]
						}
					}
				},
				{
					"name": "Obtener estudio por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/estudios/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "estudios", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo estudio",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nivel\": \"Maestr√≠a\",\n  \"descripcion\": \"Nivel de postgrado en especializaci√≥n\",\n  \"ordenNivel\": 6,\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/estudios",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "estudios"]
						}
					}
				},
				{
					"name": "Actualizar estudio",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nivel\": \"Maestr√≠a Profesional\",\n  \"descripcion\": \"Nivel de postgrado profesional\",\n  \"ordenNivel\": 6,\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/estudios/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "estudios", "1"]
						}
					}
				},
				{
					"name": "Eliminar estudio",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/estudios/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "estudios", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üé≠ Comunidades Culturales",
			"item": [
				{
					"name": "Obtener todas las comunidades",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/comunidades-culturales",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "comunidades-culturales"]
						}
					}
				},
				{
					"name": "Obtener comunidad por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/comunidades-culturales/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "comunidades-culturales", "1"]
						}
					}
				},
				{
					"name": "Crear nueva comunidad",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Comunidad Wayuu\",\n  \"descripcion\": \"Comunidad ind√≠gena del norte de Colombia\",\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/comunidades-culturales",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "comunidades-culturales"]
						}
					}
				},
				{
					"name": "Actualizar comunidad",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Comunidad Wayuu - La Guajira\",\n  \"descripcion\": \"Comunidad ind√≠gena del departamento de La Guajira\",\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/comunidades-culturales/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "comunidades-culturales", "1"]
						}
					}
				},
				{
					"name": "Eliminar comunidad",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/comunidades-culturales/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "comunidades-culturales", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Parentescos",
			"item": [
				{
					"name": "Obtener todos los parentescos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parentescos",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parentescos"]
						}
					}
				},
				{
					"name": "Obtener parentesco por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parentescos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parentescos", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo parentesco",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Primo\",\n  \"descripcion\": \"Hijo del t√≠o o t√≠a\",\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parentescos",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parentescos"]
						}
					}
				},
				{
					"name": "Actualizar parentesco",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Primo hermano\",\n  \"descripcion\": \"Hijo del hermano o hermana de los padres\",\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parentescos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parentescos", "1"]
						}
					}
				},
				{
					"name": "Eliminar parentesco",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/parentescos/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "parentescos", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üíí Situaciones Civiles",
			"item": [
				{
					"name": "Obtener todas las situaciones",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/situaciones-civiles",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "situaciones-civiles"]
						}
					}
				},
				{
					"name": "Obtener situaci√≥n por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/situaciones-civiles/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "situaciones-civiles", "1"]
						}
					}
				},
				{
					"name": "Crear nueva situaci√≥n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Uni√≥n Libre\",\n  \"codigo\": \"UL\",\n  \"descripcion\": \"Pareja en uni√≥n libre\",\n  \"orden\": 5,\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/situaciones-civiles",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "situaciones-civiles"]
						}
					}
				},
				{
					"name": "Actualizar situaci√≥n",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Uni√≥n Libre de Hecho\",\n  \"codigo\": \"UL\",\n  \"descripcion\": \"Pareja en convivencia sin matrimonio civil\",\n  \"orden\": 5,\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/situaciones-civiles/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "situaciones-civiles", "1"]
						}
					}
				},
				{
					"name": "Eliminar situaci√≥n",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/situaciones-civiles/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "situaciones-civiles", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üè† Tipos de Vivienda",
			"item": [
				{
					"name": "Obtener todos los tipos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-vivienda",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-vivienda"]
						}
					}
				},
				{
					"name": "Obtener tipo por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-vivienda/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-vivienda", "1"]
						}
					}
				},
				{
					"name": "Crear nuevo tipo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Apartamento\",\n  \"descripcion\": \"Vivienda en edificio multifamiliar\",\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-vivienda",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-vivienda"]
						}
					}
				},
				{
					"name": "Actualizar tipo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Apartamento Residencial\",\n  \"descripcion\": \"Vivienda en conjunto residencial\",\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-vivienda/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-vivienda", "1"]
						}
					}
				},
				{
					"name": "Eliminar tipo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tipos-vivienda/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tipos-vivienda", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üëï Tallas",
			"item": [
				{
					"name": "Obtener todas las tallas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tallas",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tallas"]
						}
					}
				},
				{
					"name": "Obtener talla por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tallas/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tallas", "1"]
						}
					}
				},
				{
					"name": "Crear nueva talla",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"XXL\",\n  \"descripcion\": \"Talla extra extra grande\",\n  \"tipo_prenda\": \"camisa\",\n  \"genero\": \"unisex\",\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tallas",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tallas"]
						}
					}
				},
				{
					"name": "Actualizar talla",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"XXL - Extra Grande\",\n  \"descripcion\": \"Talla extra extra grande para todo tipo de prenda\",\n  \"tipo_prenda\": \"camisa\",\n  \"genero\": \"unisex\",\n  \"activo\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tallas/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tallas", "1"]
						}
					}
				},
				{
					"name": "Eliminar talla",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/catalog/tallas/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "catalog", "tallas", "1"]
						}
					}
				}
			]
		}
	]
}
