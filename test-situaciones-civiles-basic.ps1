# Test b√°sico de situaciones civiles - Simple Test
$baseUrl = "http://localhost:3000"

Write-Host "üß™ Test b√°sico: Situaciones Civiles API" -ForegroundColor Cyan
Write-Host "=====================================" -ForegroundColor Cyan

# Test de health check del cat√°logo (endpoint p√∫blico)
Write-Host "`nüìä Test: Health check del cat√°logo" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/catalog/health" -Method GET
    Write-Host "‚úÖ Health check exitoso" -ForegroundColor Green
    Write-Host "   Status: $($response.success)" -ForegroundColor White
    Write-Host "   Message: $($response.message)" -ForegroundColor White
    Write-Host "   Situaciones Civiles: $($response.services.situacionesCiviles)" -ForegroundColor White
} catch {
    Write-Host "‚ùå Error en health check: $($_.Exception.Message)" -ForegroundColor Red
}

# Test de endpoint con auth - debe dar error 401
Write-Host "`nüîí Test: Endpoint protegido (sin token)" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/catalog/situaciones-civiles/stats" -Method GET
    Write-Host "‚ö†Ô∏è  Inesperado: No se requiri√≥ autenticaci√≥n" -ForegroundColor Orange
} catch {
    if ($_.Exception.Message -like "*401*" -or $_.Exception.Message -like "*token*") {
        Write-Host "‚úÖ Correcto: Endpoint protegido requiere autenticaci√≥n" -ForegroundColor Green
        Write-Host "   Error esperado: $($_.Exception.Message)" -ForegroundColor White
    } else {
        Write-Host "‚ùå Error inesperado: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# Test de documentaci√≥n Swagger
Write-Host "`nüìñ Test: Documentaci√≥n Swagger" -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "$baseUrl/api-docs" -Method GET
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Documentaci√≥n Swagger accesible" -ForegroundColor Green
        Write-Host "   URL: $baseUrl/api-docs" -ForegroundColor White
    }
} catch {
    Write-Host "‚ùå Error accediendo a Swagger: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüéâ Test b√°sico completado" -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Cyan
Write-Host "`nüí° Para pruebas completas:" -ForegroundColor Yellow
Write-Host "   1. Crear usuario con /api/auth/register" -ForegroundColor White
Write-Host "   2. Hacer login con /api/auth/login" -ForegroundColor White  
Write-Host "   3. Usar token para endpoints protegidos" -ForegroundColor White
Write-Host "   4. Ver documentaci√≥n en: $baseUrl/api-docs" -ForegroundColor White
